{"version":3,"file":"static/js/744.602b89e0.chunk.js","mappings":"gMAEaA,E,QAAcC,EAAAA,IAAH,qE,SCCXC,EAAS,kBAClB,SAACF,EAAD,WACI,SAAC,KAAD,CAAcG,MAAO,IAAKC,OAAQ,IAAKC,MAAM,gB,8HCH9C,SAASC,EAAT,GAA+B,IAAZC,EAAW,EAAXA,QACtB,OACI,+BACI,wBACKA,EAAQC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACT,2BACI,qCAAaD,MACb,uBAAIC,MAFCF,UCDd,SAASG,IACtB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,MAAvC,eAAOR,EAAP,KAAgBS,EAAhB,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,GAAuBL,GAASM,MAAK,SAAAC,GACnC,IAAMC,EAAS,GACfD,EAAKE,QAAQd,KAAI,YAA8B,IAA3BE,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,QACpBY,EAAQ,CACZd,GAF0C,EAATA,GAGjCC,OAAQA,EACRC,QAASA,GAEX,OAAOU,EAAOG,KAAKD,MAErBP,EAAWK,QAEZ,CAACR,KAGF,iCACIN,IAAW,SAACL,EAAA,EAAD,IAEZK,GAAWA,EAAQkB,OAAS,GAC3B,SAACnB,EAAD,CAASC,QAASA,KAElB,yE,gOC9BRmB,IAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEHC,EAAS,SAAAR,GAClB,OAAOA,EAAKZ,KACR,kBAAwD,CACpDC,GADJ,EAAGA,GAECoB,YAFJ,EAAOA,YAGHC,eAHJ,EAAoBA,eAIhBC,aAJJ,EAAoCA,kBAQrC,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACoBN,IAAAA,IAAA,sCAAyCC,EAAzC,SAAyD,IAD7E,cACGM,EADH,yBAEIA,EAASb,MAFb,kEAKA,SAAec,EAAtB,+CAAO,OAAP,oBAAO,WAA2BC,GAA3B,uFACoBT,IAAAA,IAAA,gCAAmCC,EAAnC,kBAAoDQ,EAApD,YADpB,cACGF,EADH,yBAEIA,EAASb,MAFb,kEAMA,SAAegB,EAAtB,+CAAO,OAAP,oBAAO,WAA4BvB,GAA5B,uFACgBa,IAAAA,IAAA,iBAAoBb,EAApB,oBAAuCc,EAAvC,sCADhB,cACDM,EADC,yBAEIA,EAASb,MAFb,kEAKA,SAAeiB,EAAtB,+CAAO,OAAP,oBAAO,WAAyBxB,GAAzB,uFACgBa,IAAAA,IAAA,iBAAoBb,EAApB,4BAA+Cc,IAD/D,cACDM,EADC,yBAEIA,EAASb,MAFb,kEAKA,SAAekB,EAAtB,+CAAO,OAAP,oBAAO,WAA4BzB,GAA5B,uFACgBa,IAAAA,IAAA,iBAAoBb,EAApB,4BAA+Cc,IAD/D,cACDM,EADC,yBAEIA,EAASb,MAFb","sources":["components/Loader/Loader.styled.js","components/Loader/Loader.jsx","components/Reviews/Reviews.jsx","pages/ReviewsPage.js","services/api.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const LoaderBlock = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n`;\n","import { FallingLines } from 'react-loader-spinner';\nimport {LoaderBlock} from 'components/Loader/Loader.styled'\n\nexport const Loader = () => (\n    <LoaderBlock>\n        <FallingLines width={110} height={110} color=\"#c8553d\" />\n    </LoaderBlock>\n    \n);","import propTypes from 'prop-types';\n\nexport function Reviews({ reviews }) {\n    return (\n        <>\n            <ul>\n                {reviews.map(({ id, author, content }) => (\n                    <li key={id}>\n                        <h3>Author: {author}</h3>\n                        <p>{content }</p>\n                    </li>\n                ))}\n        </ul>\n        </>\n)\n};\n\nReviews.propTypes = {\n  reviews: propTypes.arrayOf(\n    propTypes.shape({\n      id: propTypes.string,\n      author: propTypes.string,\n      content: propTypes.string,\n    })\n  ).isRequired,\n};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport * as eventsApi from 'services/api';\nimport { Loader } from 'components/Loader/Loader';\nimport { Reviews } from 'components/Reviews/Reviews.jsx';\n\nexport default function ReviewsPage() {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState(null);\n\n  useEffect(() => {\n    eventsApi.fetchReviews(movieId).then(data => {\n      const mapped = [];\n      data.results.map(({ author, content, id }) => {\n        const autor = {\n          id: id,\n          author: author,\n          content: content,\n        };\n        return mapped.push(autor);\n      });\n      setReviews(mapped);\n    });\n  }, [movieId]);\n\n  return (\n    <>\n      {!reviews && <Loader />}\n\n      {reviews && reviews.length > 0 ? (\n        <Reviews reviews={reviews} />\n      ) : (\n        <p>We don't have any reviews for this movie</p>\n      )}\n    </>\n  );\n}\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '0695a445b15baac58108e1a8456d49ee';\n\nexport const mapper = data => {\n    return data.map(\n        ({ id, poster_path, original_title, vote_average }) => ({\n            id,\n            poster_path,\n            original_title,\n            vote_average\n        }));\n};\n\nexport async function fetchTrending() {\n    const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}&page=${1}`);\n    return response.data; \n};\n\nexport async function fetchSearch(searchQuery) {\n    const response = await axios.get(`/search/movie?api_key=${API_KEY}&query=${searchQuery}&page=1`);\n    return response.data; \n    \n};\n\nexport async function fetchDetails(movieId) {\nconst response = await axios.get(`/movie/${movieId}?api_key=${API_KEY}&append_to_response=videos,images`);\n    return response.data; \n};\n\nexport async function fetchCast(movieId) {\nconst response = await axios.get(`/movie/${movieId}/credits?api_key=${API_KEY}`);\n    return response.data;  \n};\n\nexport async function fetchReviews(movieId) {\nconst response = await axios.get(`/movie/${movieId}/reviews?api_key=${API_KEY}`);\n    return response.data; \n};\n\n// export async function fetchTrending() {\n//     const trendingURL = `${BASE_URL}/trending/movie/day?api_key=${API_KEY}&page=${1}`;\n//     return await axios.get(`${trendingURL}`).then(response => response.data);   \n// };\n\n// export async function fetchSearch(searchQuery) {\n//     const serchURL = `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${searchQuery}&page=1`;\n//     return await axios.get(`${serchURL}`).then(response => response.data);   \n// };\n\n// export async function fetchDetails(movieId) {\n//     const detailsURL = `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&append_to_response=videos,images`;\n//     return await axios.get(`${detailsURL}`).then(response => response.data);  \n// };\n\n// export async function fetchCast(movieId) {\n//     const castURL = `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`;\n//     return await axios.get(`${castURL}`).then(response => response.data);  \n// };\n\n// export async function fetchReviews(movieId) {\n//     const reviewsURL = `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`;\n//     return await axios.get(`${reviewsURL}`).then(response => response.data);  \n// };"],"names":["LoaderBlock","styled","Loader","width","height","color","Reviews","reviews","map","id","author","content","ReviewsPage","movieId","useParams","useState","setReviews","useEffect","eventsApi","then","data","mapped","results","autor","push","length","axios","API_KEY","mapper","poster_path","original_title","vote_average","fetchTrending","response","fetchSearch","searchQuery","fetchDetails","fetchCast","fetchReviews"],"sourceRoot":""}